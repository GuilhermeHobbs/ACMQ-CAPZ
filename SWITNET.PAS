PROGRAM SwitNet;
{
V. 1.2a 29/05/93 Mensagem corrigida
V. 1.3  12/12/94 Acrescentado espectro e modo sem amostragem}

USES Crt,Tela_e;

VAR
  entrada,saida:TEXT;
  fonte,nome,default,nomein,nomeout:STRING;
  nfonte,nsaida,i,no1,no2,no3,fase,fases,pontosf,pontost,pontose,ppf:INTEGER;
  f1,f2,freqchav,valor,ganho,fi1,fi2:REAL;
  ch:CHAR;
  sss,tran,espectro,log,amostrar,sh:BOOLEAN;
LABEL
  lerdenovo,fim;

BEGIN
  nsaida:=1; log:=FALSE; amostrar:=TRUE; sh:=TRUE;
  freqchav:=1; fases:=2; ganho:=1e6;
  sss:=TRUE; pontosf:=24; f1:=0.01; f2:=0.501;
  tran:=FALSE; pontost:=24; ppf:=1;
  espectro:=FALSE; pontose:=2; fi1:=0.1; fi2:=0.6;
  ClrScr;
  WriteLn(tl,'[CAPZ-SWITCAP] net-list converter');
  WriteLn(tl,'[-]-[-]-[-]-[-]-[-]-[-]-[-]-[-]-[-]-[-]-[-]-[-]-[-]-[-]-[-]-[-]');
  WriteLn;
  WriteLn('Ant“nio Carlos Moreir„o de Queiroz');
  WriteLn('COPPE / Federal University of Rio de Janeiro');
  WriteLn('Version 1.3 - 12/12/94');
  WriteLn(tl,#10'This program transforms a net-list generated by the [EdFil] editor for a switched');
  WriteLn(tl,'capacitor circuit in the [CAPZ] input format to the [SWITCAP] input format.');
  IF paramcount<>0 THEN default:=ParamStr(1) else default:='';
 lerdenovo:
  nomein:=default;
  Write(tl,#10'Input file ([.net]): '); EditarLinha(nomein,WhereX,WhereY,1); WriteLn;
  IF Pos('.',nomein)=0 THEN nomein:=nomein+'.net';
  Assign(entrada,nomein);
  {$I-} ReSet(entrada); {$I+}
  IF IOResult<>0 THEN BEGIN
    WriteLn(tl,'File [',nomein,'] not found.');
    GoTo lerdenovo;
  END;
  nomeout:=Copy(nomein,1,Pos('.',nomein)-1);
  Write(tl,']Output file ([.in]): '); EditarLinha(nomeout,WhereX,WhereY,1); WriteLn;
  IF Pos('.',nomeout)=0 THEN nomeout:=nomeout+'.in';
  Write(tl,']Output node'); LerInt(nsaida);
  Write('Number of phases'); LerInt(fases);
  Write('Amplifier gain'); LerReal(ganho);
  Write('Switching frequency (Hz)'); LerReal(freqchav);
  Assign(saida,nomeout);
  ReWrite(saida);
  WriteLn(saida,'TITLE: ',nomeout);
  WriteLn(saida,'TIMING;');
  WriteLn(saida,'   PERIOD ',1/freqchav,';');
  FOR i:=1 TO fases DO WriteLn(saida,'   CLOCK clk',i,' 1 (',i-1,'/',fases,' ',i,'/',fases,');');
  WriteLn(saida,'   END;');
  WriteLn(saida,'CIRCUIT;');
  ReadLn(entrada); {Pula o no. de nos}
  WHILE not SeekEof(entrada) DO BEGIN
    nome:='';
    REPEAT
      Read(entrada,ch);
      IF ch<>' ' THEN nome:=nome+ch;
    UNTIL ch=' ';
    CASE UpCase(nome[1]) OF
      'S':BEGIN
            Read(entrada,no1,no2);
            ch:='a';
            WHILE not Eoln(entrada) DO BEGIN
              Read(entrada,fase);
              WriteLn(saida,'   ',nome,ch,' (',no1,' ',no2,') clk',fase,';');
            END;
            ReadLn(entrada);
          END;
      'P':BEGIN
            ReadLn(entrada,no1,no2,no3);
            nome[1]:='S';
            WriteLn(saida,'   ',nome,'a (',no1,' ',no3,') clk1;');
            WriteLn(saida,'   ',nome,'b (',no2,' ',no3,') clk2;');
          END;
      'C':BEGIN
            ReadLn(entrada,no1,no2,valor);
            WriteLn(saida,'   ',nome,' (',no1,' ',no2,') ',valor,';');
          END;
      'V':BEGIN
            ReadLn(entrada,no1,no2);
            WriteLn(saida,'   ',nome,' (',no1,' ',no2,');');
            fonte:=nome; nfonte:=no1;
          END;
  'A','O':BEGIN
            ReadLn(entrada,no1,no2,no3);
            nome[1]:='E';
            WriteLn(saida,'   ',nome,' (',no3,' 0 ',no2,' ',no1,') ',ganho,';');
          END;
      ELSE BEGIN WriteLn(tl,'[*] Unknown element: [',nome,']'); GoTo fim END;
    END;
  END;
  WriteLn(saida,'   END;');
  Write('Frequency response analysis'); LerBool(sss);
  IF sss THEN BEGIN
    Write('Input and output sampled once per phase (or no sampling)'); LerBool(amostrar);
    IF amostrar THEN BEGIN
      Write('Sample-and-hold output sampling (or impulse)'); LerBool(sh)
    END;
    Write('Logarithmic frequency scale'); LerBool(log);
    Write('Initial frequency (Hz)'); LerReal(f1);
    Write('Final frequency (Hz)'); LerReal(f2);
    Write('Number of points in the graph'); LerInt(pontosf);
    WriteLn(saida,'ANALYZE SSS;');
    IF log THEN nome:='LOG' ELSE nome:='LIN';
    WriteLn(saida,'   INFREQ ',f1,' ',f2,' ',nome,' ',pontosf,';');
    WriteLn(saida,'   SET ',fonte,' AC 1.0 0.0;');
    IF amostrar THEN BEGIN
      WriteLn(saida,'   SAMPLE INPUT HOLD 1/',fases,' 0+;');
      IF sh THEN
        WriteLn(saida,'   SAMPLE OUTPUT HOLD 1/',fases,' 0+;')
      ELSE
        WriteLn(saida,'   SAMPLE OUTPUT IMPULSE 1/',fases,' 0+;');
    END;
    WriteLn(saida,'   PRINT VDB(',nsaida,') VP(',nsaida,');');
    WriteLn(saida,'   PLOT VDB(',nsaida,') VP(',nsaida,');');
    WriteLn(saida,'   END;');
  END;
  Write('Time response analysis (unit step input)'); LerBool(tran);
  IF tran THEN BEGIN
    Write('Number of switching frequency periods'); LerInt(pontost);
    Write('Number of points per phase interval'); LerInt(ppf);
    WriteLn(saida,'ANALYZE TRAN;');
    WriteLn(saida,'   TIME 0- ',pontost,' 1/',fases*ppf,';');
    WriteLn(saida,'   SET ',fonte,' PULSE 0 1 0 0 0 ',pontost/freqchav,' ',(pontost+1)/freqchav,';');
    IF amostrar THEN WriteLn(saida,'   SAMPLE INPUT HOLD 1/',fases,' 0+;');
    WriteLn(saida,'   PRINT V(',nfonte,') V(',nsaida,');');
    WriteLn(saida,'   PLOT V(',nfonte,') V(',nsaida,');');
    WriteLn(saida,'   END;');
  END;
  Write('Output spectrum analysis'); LerBool(espectro);
  IF espectro THEN BEGIN
    Write('Input and output sampled once per phase (or no sampling)'); LerBool(amostrar);
    IF amostrar THEN BEGIN
      Write('Sample-and-hold output sampling (or impulse)'); LerBool(sh)
    END;
    Write('Logarithmic frequency scale'); LerBool(log);
    Write('Initial input frequency (Hz)'); LerReal(fi1);
    Write('Final input frequency (Hz)'); LerReal(fi2);
    Write('Number of frequencies'); LerInt(pontose);
    Write('Initial sweep frequency (Hz)'); LerReal(f1);
    Write('Final sweep frequency (Hz)'); LerReal(f2);
    WriteLn(saida,'ANALYZE SPECTRUM;');
    IF log THEN nome:='LOG' ELSE nome:='LIN';
    WriteLn(saida,'   INFREQ ',fi1,' ',fi2,' ',nome,' ',pontose,';');
    WriteLn(saida,'   OUTFREQ ',f1,' ',f2,' SCANNED;');
    WriteLn(saida,'   SET ',fonte,' AC 1.0 0.0;');
    IF amostrar THEN BEGIN
      WriteLn(saida,'   SAMPLE INPUT HOLD 1/',fases,' 0+;');
      IF sh THEN
        WriteLn(saida,'   SAMPLE OUTPUT HOLD 1/',fases,' 0+;')
      ELSE
        WriteLn(saida,'   SAMPLE OUTPUT IMPULSE 1/',fases,' 0+;');
    END;
    WriteLn(saida,'   PRINT VDB(',nsaida,') VP(',nsaida,');');
    WriteLn(saida,'   PLOT VDB(',nsaida,') VP(',nsaida,');');
    WriteLn(saida,'   END;');
  END;
  WriteLn(saida,'END;');
 fim:
  Close(entrada);
  Close(saida);
  WriteLn(tl,#10'File in [SWITCAP] input format created.');
END.